name: Create LaunchDarkly Feature Flag

on:
  workflow_dispatch:
    inputs:
      flag_name:
        description: 'Feature flag name'
        required: true
        type: string
      flag_key:
        description: 'Feature flag key'
        required: true
        type: string
      description:
        description: 'Feature flag description'
        required: false
        type: string
      temporary:
        description: 'Is this a temporary flag?'
        required: false
        type: boolean
      flag_type:
        description: 'Flag type'
        required: true
        type: choice
        options:
          - boolean
          - string
          - number
          - json
      tags:
        description: 'Tags (comma separated)'
        required: false
        type: string
      dryRun:
        description: 'Dry run (simulate flag creation)'
        required: false
        type: boolean

jobs:
  create-flag:
    runs-on: ubuntu-latest
    steps:
      - name: Create Feature Flag via LaunchDarkly API
        env:
          LD_API_KEY: ${{ secrets.LAUNCHDARKLY_API_KEY }}
        run: |
          jq -n \
            --arg name "${{ github.event.inputs.flag_name }}" \
            --arg key "${{ github.event.inputs.flag_key }}" \
            --arg description "${{ github.event.inputs.description }}" \
            --argjson temporary "${{ github.event.inputs.temporary }}" \
            --arg kind "${{ github.event.inputs.flag_type }}" \
            --arg tags "${{ github.event.inputs.tags }}" \
            '{
              name: $name,
              key: $key,
              description: $description,
              temporary: $temporary,
              tags: ($tags | split(",") | map(.)),
              maintainer: "admin",
              config: {kill_switch: true},
              kind: $kind,
              variations: [
                {"value": true, "name": "True"},
                {"value": false, "name": "False"}
              ],
              clientSideAvailability: {
                usingEnvironmentId: true,
                usingMobileKey: true
              }
            }' > flag.json
          dry_run="${{ github.event.inputs.dryRun }}"
          if [ "$dry_run" = "true" ]; then
            api_suffix="?dryRun=true"
            echo "Dry run enabled: API call will simulate feature flag creation."
          else
            api_suffix=""
          fi
          curl -X POST "https://app.launchdarkly.com/api/v2/flags/${{ secrets.LAUNCHDARKLY_PROJECT_KEY }}${api_suffix}" \
            -H "Authorization: $LD_API_KEY" \
            -H "Content-Type: application/json" \
            -d @flag.json